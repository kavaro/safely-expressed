import moo from 'moo'

const upperCase = arr => arr.concat(arr.map(keyword => keyword.toUpperCase()))

export default moo.compile({
    SPACE: {match: /\s+/, lineBreaks: true},
    NUMBER: /-?(?:[0-9]|[1-9][0-9]+)(?:\.[0-9]+)?(?:[eE][-+]?[0-9]+)?\b/,
    DOUBLE_QUOTED_STRING: /"(?:\\["bfnrt\/\\]|\\u[a-fA-F0-9]{4}|[^"\\])*"/,
    SINGLE_QUOTED_STRING: /'(?:\\['bfnrt\/\\]|\\u[a-fA-F0-9]{4}|[^'\\])*'/,
    TEMPLATE_STRING: /`(?:\\[`bfnrt\/\\]|\\u[a-fA-F0-9]{4}|[^`\\])*`/,
    REGEXP: /\/(?:\\[\/]|[^\/])*\/i?m?/,
    IDENTIFIER: {
      match: /[a-zA-Z_$][a-zA-Z0-9_$]*/,
      type: moo.keywords({ // if IDENTIFIER is one of these keywords then use the keyword key instead 
        INSTANCE_OF: upperCase(['instanceof', 'instance_of']),
        IN: upperCase(['in']),
        TO: upperCase(['to', 'tot']),
        TRUE: upperCase(['true', 'waar']),
        FALSE: upperCase(['false', 'onwaar']),
        NULL: upperCase(['null', 'nul']),
        THIS: upperCase(['this', 'alles']),
        LOGICAL_OR: upperCase(['or', 'of']),
        LOGICAL_AND: upperCase(['and', 'en']),
        NOT: upperCase(['not', 'niet']),
        EXPONENTIATION: upperCase(['exp']),
        SELECT: upperCase(['select', 'kies']),
        WHEN: upperCase(['when', 'als']),
        THEN: upperCase(['then', 'dan']),
        DEFAULT: upperCase(['default', 'anders'])
      })
    },
    LOGICAL_OR: '||',
    LOGICAL_AND: '&&',
    BITWISE_OR: '|',
    BITWISE_AND: '&',
    BITWISE_XOR: '^',
    BITWISE_SHIFT_LEFT: '<<',
    BITWISE_UNSIGNED_SHIFT_RIGHT: '>>>',
    BITWISE_SHIFT_RIGHT: '>>',
    BITWISE_NOT: '~',
    EXPONENTIATION: '**',
    ARROW: '=>',
    EQ3: '===',
    NEQ3: '!==',
    EQ2: '==',
    NEQ2: '!=',
    EQ1: '=',
    NEQ1: '<>',
    GTE: '>=',
    GT: '>',
    LTE: '<=',
    LT: '<',
    ADD: '+',
    SUBTRACT: '-',
    MULTIPLY: '*',
    DIVIDE: '/',
    MODULO: '%',
    NOT: '!',
    '{': '{',
    '}': '}',
    '[': '[',
    ']': ']',
    '(': '(',
    ')': ')',
    ',': ',',
    ':': ':',
    '.': '.',
    '?': '?',
    ';':';'
  })